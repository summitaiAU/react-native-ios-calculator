name: EAS Update (Expo)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  eas-update:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install EAS CLI
        run: npm install -g eas-cli@latest
        
      - name: Update package.json for EAS
        run: |
          # Check if we need to add or update critical dependencies
          if ! grep -q '"expo":' package.json; then
            npx json -I -f package.json -e 'this.dependencies.expo = "~48.0.18"'
          fi
          if ! grep -q '"expo-updates":' package.json; then
            npx json -I -f package.json -e 'this.dependencies["expo-updates"] = "~0.16.4"'
          fi
          # Ensure compatible React Native version
          npx json -I -f package.json -e 'this.dependencies["react-native"] = "0.71.8"'
          
      - name: Install Dependencies
        run: |
          # Check if package-lock.json exists
          if [ ! -f package-lock.json ]; then
            echo "No package-lock.json found, creating one..."
            # Create an empty package-lock.json
            echo '{}' > package-lock.json
          fi
          
          # Install dependencies
          npm install --legacy-peer-deps
        
      - name: Create or update eas.json
        run: |
          if [ ! -f eas.json ]; then
            echo '{
              "cli": {
                "version": ">=15.0.0"
              },
              "build": {
                "development": {
                  "developmentClient": true,
                  "distribution": "internal"
                },
                "preview": {
                  "distribution": "internal"
                },
                "production": {}
              },
              "submit": {
                "production": {}
              },
              "updates": {
                "url": "https://u.expo.dev/your-project-id"
              }
            }' > eas.json
          else
            # Update CLI version constraint if it exists
            if grep -q '"cli":' eas.json; then
              npx json -I -f eas.json -e 'this.cli.version = ">=15.0.0"'
            fi
          fi
          
      - name: Create assets directory if needed
        run: |
          mkdir -p assets
          
          # Download placeholder images if they don't exist
          if [ ! -f assets/icon.png ]; then
            curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/icon.png -o assets/icon.png || echo "Failed to download icon"
          fi
          if [ ! -f assets/splash.png ]; then
            curl -s https://raw.githubusercontent.com/expo/expo/master/templates/expo-template-blank/assets/splash.png -o assets/splash.png || echo "Failed to download splash"
          fi
          
      - name: Create basic App.js if missing
        run: |
          if [ ! -f App.js ]; then
            echo 'import React from "react";
            import { StyleSheet, Text, View } from "react-native";
            export default function App() {
              return (
                <View style={styles.container}>
                  <Text style={styles.title}>React Native App</Text>
                  <Text>Welcome to your React Native application!</Text>
                </View>
              );
            }
            const styles = StyleSheet.create({
              container: {
                flex: 1,
                backgroundColor: "#fff",
                alignItems: "center",
                justifyContent: "center",
              },
              title: {
                fontSize: 24,
                fontWeight: "bold",
                marginBottom: 20,
              },
            });' > App.js
          fi
          
      - name: Expo Login
        run: CI=1 npx expo login -u ${{ secrets.EXPO_USERNAME }} -p ${{ secrets.EXPO_PASSWORD }}
        
      - name: Initialize EAS Project
        run: npx eas init --non-interactive --force
        
      - name: EAS Update
        run: npx eas update --branch main --message "CI update from GitHub Actions" --non-interactive
